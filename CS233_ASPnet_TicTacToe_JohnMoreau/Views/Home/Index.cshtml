@*
/*
* John Moreau
* CSS233
* 12/3/2023
*/
*@

@{
    ViewData["Title"] = "Tic Tac Toe";
    int GetSpeed(int id) => id == Model.LastId ? 4 : 15;
}
@model TicTacToe;


<div class="container text-center">
    <div class="alert alert-success mt-4">
        O Wins!
    </div>
    <div class="container">
        <div>
            <a asp-controller="Home" asp-action="Restart" class="">
                New Game
            </a>
        </div>
        <div>
            <form asp-action="Update" method="post">

                <input type="hidden" asp-for="CurrentPlayer" />
                <input type="hidden" asp-for="BoardString" value='@Json.Serialize(Model.Board)' />
               
                <div class="custom-flex-row justify-content-center">
                    @for (var i = 0; i < Model.Board.Length; ++i)
                    {
                        @* This is causing the board passed to the action to be a brand new board...*@
                        //<input type="hidden" asp-for="Board[i]" name="@Model.Board[i]" value="@Model.Board[i]" /> @* Add each board position to a hidden field to bind back to the model on submit - Why can't you do a single hidden field for the full array? Grr.' *@
                        <div class="custom-flex-item">
                            <button type="submit" class="button-square" name="LastId" value=@i >
                                <canvas id="@i" width="100" height="100"></canvas>
                            </button>
                        </div>
                    }
                </div>
            </form>
        </div>
    </div>
</div>
@*Enables the drawing effect*@
<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
        @for (var i = 0; i < Model.Board.Length; ++i) 
        {
            <text>drawLetters('@i', '@Model.Board[i]', '@GetSpeed(i)'); </text>
        }
    }, false);
</script>
